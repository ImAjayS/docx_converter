#!/usr/bin/env ruby

# docx_converter -- Converts docx files into html or LaTeX via the kramdown syntax
# Copyright (C) 2013 Red (E) Tools Ltd. (www.thebigrede.net)
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'docx_converter'

if ARGV[2].nil?
  puts 'Error: Arguments missing! See https://github.com/michaelfranzl /docx_converter or README.md for documentation.'
  Process.exit!
end

options = {
  :inputfile => ARGV[0],
  :image_subdir_filesystem => "images",
  :image_subdir_kramdown => "images",
  :output_dir => File.join(ARGV[2], "src"),
  :language => "en",
  :split_chapters => true
}

output_format = ARGV[1].to_sym

supported_output_formats = [:kramdown, :html, :latex]
unless supported_output_formats.include? output_format
  puts "Output format must be one of #{ supported_output_formats.join(", ") }. Exiting."
  Process.exit!
end

r = DocxConverter::Render.new(options)
rendered_filepaths = r.render(output_format)

if rendered_filepaths.any?
  puts "Rendered files #{ rendered_filepaths.join(", ") } in directory #{ File.join(ARGV[2], "src") }"
end